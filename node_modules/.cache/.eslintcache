[{"/Users/asg/codeclan_work/DisastroAlert/src/index.js":"1","/Users/asg/codeclan_work/DisastroAlert/src/App.js":"2","/Users/asg/codeclan_work/DisastroAlert/src/reportWebVitals.js":"3","/Users/asg/codeclan_work/DisastroAlert/src/components/ErrorPage.js":"4","/Users/asg/codeclan_work/DisastroAlert/src/containers/EventsContainer.js":"5","/Users/asg/codeclan_work/DisastroAlert/src/components/EventList.js":"6","/Users/asg/codeclan_work/DisastroAlert/src/components/EventDetail.js":"7","/Users/asg/codeclan_work/DisastroAlert/src/components/CategoryList.js":"8"},{"size":535,"mtime":1687436107434,"results":"9","hashOfConfig":"10"},{"size":557,"mtime":1687436107433,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1687436107434,"results":"12","hashOfConfig":"10"},{"size":213,"mtime":1687436107434,"results":"13","hashOfConfig":"10"},{"size":1634,"mtime":1687436107434,"results":"14","hashOfConfig":"10"},{"size":392,"mtime":1687436107434,"results":"15","hashOfConfig":"10"},{"size":1192,"mtime":1687436107434,"results":"16","hashOfConfig":"10"},{"size":1040,"mtime":1687436107434,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e8e40f",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"44"},"/Users/asg/codeclan_work/DisastroAlert/src/index.js",[],[],"/Users/asg/codeclan_work/DisastroAlert/src/App.js",[],[],"/Users/asg/codeclan_work/DisastroAlert/src/reportWebVitals.js",[],[],"/Users/asg/codeclan_work/DisastroAlert/src/components/ErrorPage.js",[],[],"/Users/asg/codeclan_work/DisastroAlert/src/containers/EventsContainer.js",["45"],[],"import React, { useState, useEffect } from 'react';\nimport {useParams} from 'react-router-dom'\nimport EventList from '../components/EventList';\nimport EventDetail from '../components/EventDetail';\nimport CategoryList from '../components/CategoryList';\n\n\nconst EventContainer = () => {\n\n    const [events, setEvents] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState(\"\");\n    const [selectedEvent, setSelectedEvent] = useState(\"\");\n    \n    const {category} = useParams()\n\n    useEffect(() => {getEvents();}, [])\n    useEffect(() => {setSelectedCategory(category);}, [])\n\n    const getEvents = function(){\n        console.log(\"getEvents\")\n    fetch('https://eonet.gsfc.nasa.gov/api/v3/events')\n    .then(res => res.json())\n    .then(events => setEvents(events.events))\n    }\n\n    const handleEventSelect = (event) => {\n        const eventID = event.target.value\n        const findEvent = events.find((event) => {\n            return eventID === event.id\n        })\n        setSelectedEvent(findEvent)\n    }\n\n    const handleCategorySelected = (event) => {\n        setSelectedCategory(event.target.textContent)\n        \n    }\n\n    let filteredEvents = []\n    if (selectedCategory) { \n        filteredEvents = events.filter((event) => {\n            return event.categories[0].title === selectedCategory\n        })\n    }\n\n    return (\n        <>\n        <CategoryList events={events} handleCategorySelected={handleCategorySelected}/>\n        <EventList events={filteredEvents} handleEventSelect={handleEventSelect}/>\n        <EventDetail event={selectedEvent}/>\n        </>\n    )\n}\n\nexport default EventContainer","/Users/asg/codeclan_work/DisastroAlert/src/components/EventList.js",[],[],"/Users/asg/codeclan_work/DisastroAlert/src/components/EventDetail.js",["46","47"],[],"import { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\n\nconst EventDetail = ({event}) => {\n\n\n    let longAndLat;\n    let latAndLong;\n    if (event.geometry) {\n        longAndLat = event.geometry[0].coordinates\n        latAndLong = [longAndLat[1],longAndLat[0]];\n    } \n\n    const MapChange = ()=>{\n        const map = useMap()\n        map.setView(latAndLong)\n      }\n\n    let declareCategory \n    if (event.categories) {\n        declareCategory = \n        <>\n        <h3>{event.title}</h3>\n        <p>This event is in the category of: {event.categories[0].title}</p>\n        <p>Latest information on date - {(event.geometry[0].date).substr(0, 10)}</p>\n        <MapContainer center={latAndLong} zoom={6} scrollWheelZoom={false}>\n        <MapChange center={latAndLong}/>\n        <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        </MapContainer>\n        </>\n    }\n\n    return (\n        <div>\n            {declareCategory}\n        </div>\n    )\n}\n\n\n\nexport default EventDetail","/Users/asg/codeclan_work/DisastroAlert/src/components/CategoryList.js",["48"],[],"import {Link} from \"react-router-dom\"\n\nconst CategoryList = ({events, handleCategorySelected}) => {\n    const listOfCategories = events.map((event, index) => {\n        return (\n            event.categories[0].title\n        )\n    })\n    const setOfUniqueCategories = new Set(listOfCategories)\n    const arrayOfUniqueCategories = [... setOfUniqueCategories].map((title, index) => {\n        // original code:\n        // return <option>{title}</option>\n        return <li key={index} value={title}><Link to={\"/disaster/\" + title} onClick={handleCategorySelected}>{title}</Link></li>\n    })\n\n    return (\n        // original code:\n        // <div>\n        //     <select onChange={handleCategorySelected}>\n        //     <option disabled selected placeholder>Select a category</option>\n        //         {arrayOfUniqueCategories}\n        //     </select>\n        // </div>\n\n        <ul className=\"list\">\n        <h3>Choose a disaster category: </h3>\n            {arrayOfUniqueCategories}\n        </ul>\n        )\n}\n\n\n\nexport default CategoryList",{"ruleId":"49","severity":1,"message":"50","line":17,"column":55,"nodeType":"51","endLine":17,"endColumn":57,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":43,"nodeType":"55","messageId":"56","endLine":1,"endColumn":49},{"ruleId":"53","severity":1,"message":"57","line":1,"column":51,"nodeType":"55","messageId":"56","endLine":1,"endColumn":56},{"ruleId":"58","severity":1,"message":"59","line":10,"column":41,"nodeType":"60","messageId":"61","endLine":10,"endColumn":42,"fix":"62"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["63"],"no-unused-vars","'Marker' is defined but never used.","Identifier","unusedVar","'Popup' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"64","text":"65"},{"desc":"66","fix":"67"},[332,333],"","Update the dependencies array to be: [category]",{"range":"68","text":"69"},[593,595],"[category]"]